<?php

namespace DeteccionBundle\Repository;

/**
 * CpuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CpuRepository extends \Doctrine\ORM\EntityRepository
{
	public function obtenerCpu($direccion)
	{

		

        $res['nse'] = $this->ejecutar("WMIC $direccion CSPRODUCT get IdentifyingNumber /FORMAT:List");
        $res['nom'] = $this->ejecutar("WMIC $direccion CPU get SYSTEMNAME /FORMAT:List");
        $res['fab'] = $this->ejecutar("WMIC $direccion CPU get Manufacturer /FORMAT:List");
        $res['sepro'] = $this->ejecutar("WMIC $direccion CPU get ProcessorId /FORMAT:List");
        $res['nopro'] = $this->ejecutar("WMIC $direccion CPU get Name /FORMAT:List");
        $res['nupro'] = $this->ejecutar("WMIC $direccion CPU get NumberOfCores /FORMAT:List");
        $res['vepro'] = $this->ejecutar("WMIC $direccion CPU get MaxClockSpeed /FORMAT:List");
        $res['lopro'] = $this->ejecutar("WMIC $direccion CPU get NumberOfLogicalProcessors /FORMAT:List");
        $res['fapro'] = $this->ejecutar("WMIC $direccion CPU get Manufacturer /FORMAT:List");
        $res['arpro'] = $this->ejecutar("WMIC $direccion CPU get DataWidth /FORMAT:List");

        print('CPu Analizada!');
        return $res;
	}

    private function ejecutar($comando)
    {
        //Ejecutando el comando MS-DOS
        $respuesta=shell_exec($comando);
        //Determinar la posicion del =
        $posicion=strpos($respuesta, '=');
        //retornamos todo lo que este DESPUES del igual
        return substr($respuesta, ($posicion+1));
    }
}
